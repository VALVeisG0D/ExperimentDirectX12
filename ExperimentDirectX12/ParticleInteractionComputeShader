;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; no parameters
; shader debug name: 2804c0d972f1fe2b586b2edb0be86b60.lld
;
; Pipeline Runtime Information: 
;
;
;
; Buffer Definitions:
;
; Resource bind info for gInput
; {
;
;   struct struct.Particle
;   {
;
;       float Position;                               ; Offset:    0
;       float Velocity;                               ; Offset:    4
;   
;   } $Element;                                       ; Offset:    0 Size:     8
;
; }
;
; Resource bind info for gOutput
; {
;
;   struct struct.Particle
;   {
;
;       float Position;                               ; Offset:    0
;       float Velocity;                               ; Offset:    4
;   
;   } $Element;                                       ; Offset:    0 Size:     8
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; gInput                                UAV  struct     r/w+cnt      U0             u0     1
; gOutput                               UAV  struct     r/w+cnt      U1             u1     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%"class.ConsumeStructuredBuffer<Particle>" = type { %struct.Particle }
%struct.Particle = type { float, float }
%"class.AppendStructuredBuffer<Particle>" = type { %struct.Particle }
%dx.types.Handle = type { i8* }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }

@"\01?gInput@@3V?$ConsumeStructuredBuffer@UParticle@@@@A" = external constant %"class.ConsumeStructuredBuffer<Particle>", align 4
@"\01?gOutput@@3V?$AppendStructuredBuffer@UParticle@@@@A" = external constant %"class.AppendStructuredBuffer<Particle>", align 4
@llvm.used = appending global [2 x i8*] [i8* bitcast (%"class.ConsumeStructuredBuffer<Particle>"* @"\01?gInput@@3V?$ConsumeStructuredBuffer@UParticle@@@@A" to i8*), i8* bitcast (%"class.AppendStructuredBuffer<Particle>"* @"\01?gOutput@@3V?$AppendStructuredBuffer@UParticle@@@@A" to i8*)], section "llvm.metadata"

define void @main() {
  %p.0 = alloca float
  %p.1 = alloca float
  %gOutput_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 1, i32 1, i1 false), !dbg !49  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %gInput_UAV_structbuf = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 1, i32 0, i32 0, i1 false), !dbg !49  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  call void @llvm.dbg.declare(metadata float* %p.0, metadata !50, metadata !51), !dbg !49
  call void @llvm.dbg.declare(metadata float* %p.1, metadata !50, metadata !52), !dbg !49
  %1 = call i32 @dx.op.bufferUpdateCounter(i32 70, %dx.types.Handle %gInput_UAV_structbuf, i8 -1), !dbg !53  ; BufferUpdateCounter(uav,inc)
  %RawBufferLoad1 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %gInput_UAV_structbuf, i32 %1, i32 0, i8 1, i32 4), !dbg !53  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %2 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad1, 0, !dbg !53
  store float %2, float* %p.0, !dbg !53
  %RawBufferLoad = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %gInput_UAV_structbuf, i32 %1, i32 4, i8 1, i32 4), !dbg !53  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %3 = extractvalue %dx.types.ResRet.f32 %RawBufferLoad, 0, !dbg !53
  store float %3, float* %p.1, !dbg !53
  %4 = load float, float* %p.0, align 4, !dbg !54
  %Cos = call float @dx.op.unary.f32(i32 12, float %4), !dbg !55  ; Cos(value)
  store float %Cos, float* %p.0, align 4, !dbg !56
  %5 = load float, float* %p.1, align 4, !dbg !57
  %6 = fadd fast float %5, 2.000000e+00, !dbg !57
  store float %6, float* %p.1, align 4, !dbg !57
  %7 = call i32 @dx.op.bufferUpdateCounter(i32 70, %dx.types.Handle %gOutput_UAV_structbuf, i8 1), !dbg !58  ; BufferUpdateCounter(uav,inc)
  %8 = load float, float* %p.0, !dbg !58
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %gOutput_UAV_structbuf, i32 %7, i32 0, float %8, float undef, float undef, float undef, i8 1, i32 4), !dbg !58  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  %9 = load float, float* %p.1, !dbg !58
  call void @dx.op.rawBufferStore.f32(i32 140, %dx.types.Handle %gOutput_UAV_structbuf, i32 %7, i32 4, float %9, float undef, float undef, float undef, i8 1, i32 4), !dbg !58  ; RawBufferStore(uav,index,elementOffset,value0,value1,value2,value3,mask,alignment)
  ret void, !dbg !59
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

; Function Attrs: nounwind
declare i32 @dx.op.bufferUpdateCounter(i32, %dx.types.Handle, i8) #1

; Function Attrs: nounwind
declare void @dx.op.rawBufferStore.f32(i32, %dx.types.Handle, i32, i32, float, float, float, float, i8, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!23, !24}
!llvm.ident = !{!25}
!dx.source.contents = !{!26}
!dx.source.defines = !{!2}
!dx.source.mainFileName = !{!27}
!dx.source.args = !{!28}
!dx.version = !{!29}
!dx.valver = !{!30}
!dx.shaderModel = !{!31}
!dx.resources = !{!32}
!dx.typeAnnotations = !{!37, !43}
!dx.entryPoints = !{!46}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "dxc 1.2", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3, globals: !7)
!1 = !DIFile(filename: "ParticleInteractionComputeShader.hlsl", directory: "")
!2 = !{}
!3 = !{!4}
!4 = !DISubprogram(name: "main", scope: !1, file: !1, line: 11, type: !5, isLocal: false, isDefinition: true, scopeLine: 12, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @main)
!5 = !DISubroutineType(types: !6)
!6 = !{null}
!7 = !{!8, !19}
!8 = !DIGlobalVariable(name: "gInput", linkageName: "\01?gInput@@3V?$ConsumeStructuredBuffer@UParticle@@@@A", scope: !0, file: !1, line: 7, type: !9, isLocal: false, isDefinition: true, variable: %"class.ConsumeStructuredBuffer<Particle>"* @"\01?gInput@@3V?$ConsumeStructuredBuffer@UParticle@@@@A")
!9 = !DICompositeType(tag: DW_TAG_class_type, name: "ConsumeStructuredBuffer<Particle>", file: !1, line: 7, size: 64, align: 32, elements: !10, templateParams: !17)
!10 = !{!11}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !9, file: !1, line: 7, baseType: !12, size: 64, align: 32)
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "Particle", file: !1, line: 1, size: 64, align: 32, elements: !13)
!13 = !{!14, !16}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "Position", scope: !12, file: !1, line: 3, baseType: !15, size: 32, align: 32)
!15 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "Velocity", scope: !12, file: !1, line: 4, baseType: !15, size: 32, align: 32, offset: 32)
!17 = !{!18}
!18 = !DITemplateTypeParameter(name: "element", type: !12)
!19 = !DIGlobalVariable(name: "gOutput", linkageName: "\01?gOutput@@3V?$AppendStructuredBuffer@UParticle@@@@A", scope: !0, file: !1, line: 8, type: !20, isLocal: false, isDefinition: true, variable: %"class.AppendStructuredBuffer<Particle>"* @"\01?gOutput@@3V?$AppendStructuredBuffer@UParticle@@@@A")
!20 = !DICompositeType(tag: DW_TAG_class_type, name: "AppendStructuredBuffer<Particle>", file: !1, line: 8, size: 64, align: 32, elements: !21, templateParams: !17)
!21 = !{!22}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !20, file: !1, line: 8, baseType: !12, size: 64, align: 32)
!23 = !{i32 2, !"Dwarf Version", i32 4}
!24 = !{i32 2, !"Debug Info Version", i32 3}
!25 = !{!"dxc 1.2"}
!26 = !{!"ParticleInteractionComputeShader.hlsl", !"struct Particle\0D\0A{\0D\0A\09float Position;\0D\0A\09float Velocity;\0D\0A};\0D\0A\0D\0AConsumeStructuredBuffer<Particle> gInput;\0D\0AAppendStructuredBuffer<Particle> gOutput;\0D\0A\0D\0A[numthreads(256, 1, 1)]\0D\0Avoid main()\0D\0A{\0D\0A\09Particle p = gInput.Consume();\0D\0A\0D\0A\09p.Position = cos(p.Position);\0D\0A\09p.Velocity += 2.0f;\0D\0A\0D\0A\09gOutput.Append(p);\0D\0A}"}
!27 = !{!"ParticleInteractionComputeShader.hlsl"}
!28 = !{!"/E", !"main", !"/T", !"cs_6_2", !"/Od", !"/Zi"}
!29 = !{i32 1, i32 2}
!30 = !{i32 1, i32 3}
!31 = !{!"cs", i32 6, i32 2}
!32 = !{null, !33, null, null}
!33 = !{!34, !36}
!34 = !{i32 0, %"class.ConsumeStructuredBuffer<Particle>"* undef, !"gInput", i32 0, i32 0, i32 1, i32 12, i1 false, i1 true, i1 false, !35}
!35 = !{i32 1, i32 8}
!36 = !{i32 1, %"class.AppendStructuredBuffer<Particle>"* undef, !"gOutput", i32 0, i32 1, i32 1, i32 12, i1 false, i1 true, i1 false, !35}
!37 = !{i32 0, %"class.ConsumeStructuredBuffer<Particle>" undef, !38, %struct.Particle undef, !40, %"class.AppendStructuredBuffer<Particle>" undef, !38}
!38 = !{i32 8, !39}
!39 = !{i32 6, !"h", i32 3, i32 0}
!40 = !{i32 8, !41, !42}
!41 = !{i32 6, !"Position", i32 3, i32 0, i32 7, i32 9}
!42 = !{i32 6, !"Velocity", i32 3, i32 4, i32 7, i32 9}
!43 = !{i32 1, void ()* @main, !44}
!44 = !{!45}
!45 = !{i32 1, !2, !2}
!46 = !{void ()* @main, !"main", null, !32, !47}
!47 = !{i32 0, i64 17, i32 4, !48}
!48 = !{i32 256, i32 1, i32 1}
!49 = !DILocation(line: 13, column: 11, scope: !4)
!50 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !4, file: !1, line: 13, type: !12)
!51 = !DIExpression(DW_OP_bit_piece, 0, 4)
!52 = !DIExpression(DW_OP_bit_piece, 4, 4)
!53 = !DILocation(line: 13, column: 15, scope: !4)
!54 = !DILocation(line: 15, column: 21, scope: !4)
!55 = !DILocation(line: 15, column: 15, scope: !4)
!56 = !DILocation(line: 15, column: 13, scope: !4)
!57 = !DILocation(line: 16, column: 13, scope: !4)
!58 = !DILocation(line: 18, column: 2, scope: !4)
!59 = !DILocation(line: 19, column: 1, scope: !4)
